name: PowerShell Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install PSScriptAnalyzer
      shell: pwsh
      run: |
        Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser
        
    - name: Lint PowerShell scripts
      shell: pwsh
      run: |
        $scripts = Get-ChildItem -Path . -Filter *.ps1 -Recurse | Where-Object { $_.DirectoryName -notmatch '\\\.git\\|\\backup_' }
        $errors = @()
        
        foreach ($script in $scripts) {
          Write-Host "Analyzing: $($script.FullName)"
          $results = Invoke-ScriptAnalyzer -Path $script.FullName -Severity Warning,Error
          
          if ($results) {
            $errors += $results
            $results | Format-Table -AutoSize
          }
        }
        
        if ($errors.Count -gt 0) {
          Write-Error "Found $($errors.Count) PSScriptAnalyzer issues"
          exit 1
        } else {
          Write-Host "✓ All scripts passed linting!" -ForegroundColor Green
        }
        
    - name: Check for syntax errors
      shell: pwsh
      run: |
        $scripts = Get-ChildItem -Path . -Filter *.ps1 -Recurse | Where-Object { $_.DirectoryName -notmatch '\\\.git\\|\\backup_' }
        $syntaxErrors = $false
        
        foreach ($script in $scripts) {
          try {
            $null = [System.Management.Automation.PSParser]::Tokenize((Get-Content $script.FullName -Raw), [ref]$null)
            Write-Host "✓ $($script.Name)" -ForegroundColor Green
          }
          catch {
            Write-Error "Syntax error in $($script.Name): $_"
            $syntaxErrors = $true
          }
        }
        
        if ($syntaxErrors) {
          exit 1
        }

