# ===============================================================
# Keyword Permutation Generator for SearxNG LinkedIn Collector
# ===============================================================
# Generates comprehensive keyword permutations for LinkedIn searches
#
# Usage:
#   .\Generate-KeywordPermutations.ps1 -ExportToFile keywords.txt
#   .\Generate-KeywordPermutations.ps1 -UseInSearch

[CmdletBinding()]
param(
    [string]$ExportToFile = "",
    [switch]$UseInSearch,
    [switch]$Interactive
)

# ============== BASE TERMS ==============
$institutions = @("Stanford", "Stanford University")
$departments = @("Computer Science", "CS", "CompSci", "Comp Sci")
$degrees = @("PhD", "Ph.D.", "MS", "M.S.", "BS", "B.S.", "Postdoc")
$researchAreas = @(
    "Artificial Intelligence", "AI",
    "Machine Learning", "ML",
    "Deep Learning", "DL",
    "Natural Language Processing", "NLP",
    "Computer Vision", "CV",
    "Robotics",
    "Data Science",
    "Human-Computer Interaction", "HCI",
    "Reinforcement Learning", "RL",
    "Generative AI",
    "Large Language Models", "LLM"
)
$positions = @(
    "Professor", "Prof", "Faculty",
    "Research Scientist", "Researcher",
    "PhD Student", "Graduate Student", "Grad Student",
    "Doctoral Student", "Student"
)
$labs = @(
    "AI Lab", "SAIL",
    "NLP Group",
    "Vision Lab",
    "Graphics Lab",
    "Systems Group",
    "HAI", "Human-Centered AI"
)

# ============== GENERATE PERMUTATIONS ==============

Write-Host "`n╔═══════════════════════════════════════════════════════╗" -ForegroundColor Cyan
Write-Host "║  Keyword Permutation Generator                    ║" -ForegroundColor Cyan
Write-Host "╚═══════════════════════════════════════════════════════╝`n" -ForegroundColor Cyan

$allPermutations = [System.Collections.Generic.HashSet[string]]::new([StringComparer]::OrdinalIgnoreCase)

# Pattern 1: [Institution] + [Department]
foreach ($inst in $institutions) {
    foreach ($dept in $departments) {
        [void]$allPermutations.Add("$inst $dept")
    }
}

# Pattern 2: [Institution] + [Degree] + [Department]
foreach ($inst in $institutions) {
    foreach ($degree in $degrees) {
        foreach ($dept in $departments) {
            [void]$allPermutations.Add("$inst $degree $dept")
        }
    }
}

# Pattern 3: [Institution] + [Research Area]
foreach ($inst in $institutions) {
    foreach ($area in $researchAreas) {
        [void]$allPermutations.Add("$inst $area")
    }
}

# Pattern 4: [Institution] + [Degree] + [Research Area]
foreach ($inst in $institutions) {
    foreach ($degree in $degrees) {
        foreach ($area in $researchAreas) {
            [void]$allPermutations.Add("$inst $degree $area")
        }
    }
}

# Pattern 5: [Institution] + [Position] + [Department]
foreach ($inst in $institutions) {
    foreach ($pos in $positions) {
        foreach ($dept in $departments) {
            [void]$allPermutations.Add("$inst $pos $dept")
        }
    }
}

# Pattern 6: [Institution] + [Lab]
foreach ($inst in $institutions) {
    foreach ($lab in $labs) {
        [void]$allPermutations.Add("$inst $lab")
    }
}

# Pattern 7: [Institution] + [Position] + [Research Area]
foreach ($inst in $institutions) {
    foreach ($pos in $positions) {
        foreach ($area in $researchAreas) {
            [void]$allPermutations.Add("$inst $pos $area")
        }
    }
}

# Sort permutations
$sortedPermutations = $allPermutations | Sort-Object

Write-Host "Generated $($sortedPermutations.Count) unique keyword permutations`n" -ForegroundColor Green

# Display sample
Write-Host "Sample keywords (first 10):" -ForegroundColor Cyan
$sortedPermutations | Select-Object -First 10 | ForEach-Object {
    Write-Host "  - $_" -ForegroundColor Gray
}
Write-Host ""

# ============== EXPORT OPTIONS ==============

if ($ExportToFile) {
    Write-Host "Exporting to file: $ExportToFile" -ForegroundColor Yellow
    
    $header = @(
        "# Generated Keyword Permutations - $([DateTime]::Now.ToString('yyyy-MM-dd HH:mm:ss'))",
        "# Total Keywords: $($sortedPermutations.Count)",
        "# Generated by: Generate-KeywordPermutations.ps1",
        ""
    )
    
    [System.IO.File]::WriteAllLines($ExportToFile, ($header + $sortedPermutations))
    
    Write-Host "[+] Exported $($sortedPermutations.Count) keywords to: $ExportToFile" -ForegroundColor Green
    Write-Host ""
}

if ($UseInSearch) {
    Write-Host "Launching search with generated keywords..." -ForegroundColor Yellow
    $scriptPath = Join-Path $PSScriptRoot "ScriptQueries.ps1"
    if (Test-Path $scriptPath) {
        & $scriptPath -Keywords $sortedPermutations
    } else {
        Write-Host "[-] ScriptQueries.ps1 not found" -ForegroundColor Red
    }
}

if ($Interactive) {
    Write-Host "═══════════════════════════════════════════════════════" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "Options:" -ForegroundColor Cyan
    Write-Host "  1. Export to file" -ForegroundColor White
    Write-Host "  2. Use in search" -ForegroundColor White
    Write-Host "  3. Display all" -ForegroundColor White
    Write-Host "  4. Exit" -ForegroundColor White
    Write-Host ""
    
    $choice = Read-Host "Select option (1-4)"
    
    switch ($choice) {
        "1" {
            $filename = Read-Host "Enter filename (e.g., keywords.txt)"
            if ($filename) {
                $exportPath = Join-Path (Split-Path -Parent (Split-Path -Parent $PSScriptRoot)) "data\$filename"
                [System.IO.File]::WriteAllLines($exportPath, $sortedPermutations)
                Write-Host "[+] Exported to: $exportPath" -ForegroundColor Green
            }
        }
        "2" {
            $scriptPath = Join-Path $PSScriptRoot "ScriptQueries.ps1"
            if (Test-Path $scriptPath) {
                & $scriptPath -Keywords $sortedPermutations
            }
        }
        "3" {
            $sortedPermutations | ForEach-Object {
                Write-Host "  $_" -ForegroundColor Gray
            }
        }
        "4" {
            Write-Host "Exiting..." -ForegroundColor Yellow
        }
        default {
            Write-Host "Invalid option" -ForegroundColor Red
        }
    }
}

Write-Host ""

